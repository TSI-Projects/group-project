<Application x:Class="GW_UI.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             

             StartupUri="Login.xaml"
             Startup="Application_Startup">
    <Application.Resources>
        <!-- Стили текстового поля для логина-->
        <Style x:Key="InputTextBoxStyle" TargetType="TextBox">
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#b8b9fc"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border CornerRadius="5" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Стили текстового поля для пароля-->
        <Style x:Key="InputPasswordBoxStyle" TargetType="PasswordBox">
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="0,10"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#b8b9fc"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border CornerRadius="5" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
                        Background="{TemplateBinding Background}">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0" Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль текстового поля для TextBox -->
        <Style x:Key="TextBoxStyle" TargetType="TextBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border 
                    CornerRadius="10" 
                    BorderBrush="#3B71CA" 
                    BorderThickness="2" 
                    Background="White">
                            <ScrollViewer x:Name="PART_ContentHost" Margin="0"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Стиль текстового поля для TextBlock -->
        <Style x:Key="TextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Margin" Value="15,0,0,0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsHitTestVisible" Value="False"/>
        </Style>

        <!-- Стиль кнопки -->
        <Style x:Key="ActionButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="220"/>
            <Setter Property="Height" Value="35"/>
            <Setter Property="Margin" Value="20"/>
            <Setter Property="Background" Value="#7A7CFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border CornerRadius="10" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#5557FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для текстов с ссылками -->
        <Style x:Key="LinkTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#7A7CFF"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="TextDecorations" Value="Underline"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для обычного текста -->
        <Style x:Key="NormalTextStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Margin" Value="5,0"/>
        </Style>
        
        <!--Стиль для иконок Метро-->
        <Style x:Key="menuButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ffffff"/>
            <Setter Property="Tag" Value="Hidden"/>
            <Setter Property="Margin" Value="25 0 5 0"/>
            <Setter Property="Height" Value="55"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="20 20 20 20">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Tag" Value="Visible"/>
                    <Setter Property="Background" Value="#f8f7fc"/>
                    <Setter Property="Foreground" Value="#7A7CFF"/>
                </Trigger>

                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="Tag" Value="Hidden"/>
                </Trigger>

                <DataTrigger Binding="{Binding ElementName=menuButton, Path=IsActive}" Value="True">
                    <Setter Property="Tag" Value="Visible"/>
                    <Setter Property="Background" Value="#f8f7fc"/>
                    <Setter Property="Foreground" Value="#7A7CFF"/>

                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="menuButtonIcon" TargetType="{x:Type Icon:PackIconMaterial}">
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Margin" Value="20 0"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="{Binding Path=Foreground,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
        </Style>

        <Style x:Key="LanguageToggleButtonStyle" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border x:Name="border" BorderBrush="#b8b9fc" BorderThickness="1" Background="Transparent" CornerRadius="8">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!-- Наведение мыши -->
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#7A7CFF"/>
                            </Trigger>
                            <!-- Нажатие кнопки -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#7A7CFF"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Активное состояние кнопки (нажата) -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="border" Property="Background" Value="#7A7CFF"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Сброс активного состояния -->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="border" Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Width" Value="80"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="Gray"/>
            <Setter Property="Margin" Value="10"/>
        </Style>

        <!-- Стиль для контейнера кнопок (UniformGrid) -->
        <Style x:Key="LanguageButtonContainerStyle" TargetType="UniformGrid">
            <Setter Property="Columns" Value="3"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0,0,0,20"/>
        </Style>

        <!-- Стиль для заголовков -->
        <Style x:Key="HeadingTextBlockStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="#7A7CFF"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid">
            <Setter Property="Background" Value="#FFFFFF"/>
            <Setter Property="RowBackground" Value="#cccdfc"/>
            <Setter Property="AlternatingRowBackground" Value="#cfd0fc"/>
            <Setter Property="BorderBrush" Value="#b8b9fc"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="HorizontalGridLinesBrush" Value="#b8b9fc"/>
            <Setter Property="VerticalGridLinesBrush" Value="#b8b9fc"/>
            <Setter Property="GridLinesVisibility" Value="All"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HeadersVisibility" Value="Column"/>
            <Setter Property="IsReadOnly" Value="True"/>
        </Style>

        <!-- Стиль для заголовков колонок в DataGrid -->
        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#7A7CFF"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="SeparatorBrush" Value="#b8b9fc"/>
            <Setter Property="SeparatorVisibility" Value="Visible"/>
        </Style>

        <!-- Стиль для ячеек в DataGrid -->
        <Style TargetType="DataGridCell">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="Foreground" Value="Black"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="#3B71CA"/>
                    <Setter Property="Foreground" Value="#000000"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для кнопки Delete в DataGrid -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <iconPacks:PackIconMaterial Kind="DeleteOutline" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!-- Добавление эффекта при наведении -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B0B3FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для кнопки Edit в DataGrid -->
        <Style x:Key="EditButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <iconPacks:PackIconMaterial Kind="FileEdit" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!-- Добавление эффекта при наведении -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B0B3FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для кнопки SaveData в DataGrid -->
        <Style x:Key="SaveButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <iconPacks:PackIconMaterial Kind="ContentSave" VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="BorderThickness" Value="0"/>
            <!-- Добавление эффекта при наведении -->
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#B0B3FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для ползунка прокрутки -->
        <Style x:Key="ScrollBarThumbStyle" TargetType="Thumb">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Height" Value="150"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Border Background="#7A7CFF" BorderBrush="#b8b9fc" BorderThickness="1" CornerRadius="7"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Основной стиль ScrollBar -->
        <Style TargetType="ScrollBar">
            <Setter Property="Width" Value="20"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollBar">
                        <Grid x:Name="GridRoot" Background="{TemplateBinding Background}">
                            <Track x:Name="PART_Track">
                                <!-- Только ползунок без кнопок прокрутки -->
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbStyle}"/>
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!-- Шаблон для редактируемого текста в ComboBox -->
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="White" />
        </ControlTemplate>

        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="3,3,23,3" Focusable="True" Background="Transparent" Visibility="Collapsed" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для ComboBox -->
        <Style x:Key="ComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="Margin" Value="0 0 0 15"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton 
                        Name="ToggleButton" 
                        Grid.Column="2" 
                        ClickMode="Press" 
                        Focusable="false"
                        IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
                                <ToggleButton.Template>
                                    <ControlTemplate>
                                        <Border 
                                    CornerRadius="10" 
                                    BorderBrush="#3B71CA" 
                                    BorderThickness="2" 
                                    Background="White"/>
                                    </ControlTemplate>
                                </ToggleButton.Template>
                            </ToggleButton>
                            <ContentPresenter 
                        Name="ContentSite"
                        IsHitTestVisible="False"
                        Content="{TemplateBinding SelectionBoxItem}"
                        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                        Margin="15 0 0 0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"/>
                            <TextBox 
                        x:Name="PART_EditableTextBox"
                        Style="{x:Null}"
                        Template="{StaticResource ComboBoxTextBox}"
                        HorizontalAlignment="Left" 
                        VerticalAlignment="Center" 
                        Margin="3 3 23 3"
                        Focusable="True" 
                        Background="Transparent"
                        Visibility="Hidden"
                        IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup 
                        Name="Popup"
                        Placement="Bottom"
                        IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Slide">
                                <Grid 
                            Name="DropDown"
                            SnapsToDevicePixels="True"
                            MinWidth="{TemplateBinding ActualWidth}"
                            MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border 
                                x:Name="DropDownBorder"
                                Background="White"
                                BorderThickness="1"
                                BorderBrush="#3B71CA">
                                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
                                        </ScrollViewer>
                                    </Border>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="Gray"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для DatePicker -->
        <Style x:Key="DatePickerStyle" TargetType="DatePicker">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Border 
                    CornerRadius="10" 
                    BorderBrush="#3B71CA" 
                    BorderThickness="2" 
                    Background="White">
                            <Grid>
                                <!-- Текстовое поле для отображения выбранной даты -->
                                <TextBox 
                                    x:Name="PART_TextBox" 
                                    Margin="10,5,40,5" 
                                    Background="Transparent" 
                                    BorderThickness="0" 
                                    IsReadOnly="True"
                                    Text="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, StringFormat='dd.MM.yyyy'}"/>
                                <!-- Кнопка для открытия календаря -->
                                <Button 
                                    x:Name="PART_Button" 
                                    Width="30" 
                                    Height="30" 
                                    HorizontalAlignment="Right" 
                                    VerticalAlignment="Center" 
                                    Content="📅" 
                                    Background="Transparent" 
                                    BorderThickness="0"/>
                                <!-- Всплывающее окно с календарем -->
                                <Popup 
                                    x:Name="PART_Popup" 
                                    AllowsTransparency="True" 
                                    Placement="Bottom" 
                                    StaysOpen="False">
                                        <Border Background="White" BorderBrush="#3B71CA" BorderThickness="2">
                                            <Calendar 
                                                x:Name="PART_Calendar" 
                                                SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"/>
                                        </Border>
                                </Popup>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Width" Value="400"/>
            <Setter Property="Height" Value="45"/>
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="0,0,0,15"/>
        </Style>

        <!-- Стиль для кнопок -->
        <Style x:Key="DataGridButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Margin" Value="3 0"/>
            <Setter Property="ToolTip" Value="Edit"/>
        </Style>
        
    </Application.Resources>
</Application>
